swagger: "2.0"
info:
  title: "API de Categorias de Despesas"
  description: "Endpoints para gerenciar categorias de despesas, contas bancárias e transações"
  version: "1.0.0"
securityDefinitions:
  BearerAuth:
    type: apiKey
    in: header
    name: Authorization
    description: "Utilize o token JWT no formato 'Bearer <token>'"

paths:
  /login:
    post:
      summary: "Login do sistema"
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
                example: "admin@admin.com"
              password:
                type: string
                example: "2112"
      responses:
        200:
          description: "Login bem-sucedido"
          schema:
            type: object
            properties:
              access_token:
                type: string
                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        401:
          description: "Credenciais inválidas"
          schema:
            type: object
            properties:
              msg:
                type: string
                example: "Credenciais inválidas"

  /Expense/All:
    get:
      summary: "Recuperar todas as categorias de despesas"
      security:
        - BearerAuth: []
      responses:
        200:
          description: "Lista de categorias"
          schema:
            type: array
            items:
              properties:
                name:
                  type: string

  /Expense:
    post:
      summary: "Criar uma nova categoria de despesa"
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              name:
                type: string
                example: "Alimentação"
              description:
                type: string
                example: "Alimentação diária"
      responses:
        201:
          description: "Categoria criada com sucesso"

  /BankAccount/All:
    get:
      summary: "Recuperar todas as contas de bancos"
      security:
        - BearerAuth: []
      responses:
        200:
          description: "Lista de bancos"
          schema:
            type: array
            items:
              properties:
                name:
                  type: string

  /BankAccount:
    post:
      summary: "Criar uma nova conta bancária"
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              bank_name:
                type: string
                example: "Banco do Brasil"
              account_number:
                type: string
                example: "Numero da conta"
              balance:
                type: number
                format: float
                example: 1000.00
      responses:
        201:
          description: "Conta bancária criada com sucesso"

  /Transaction:
    post:
      summary: "Criar uma transação"
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              type:
                type: string
                example: "Crédito"
              amount:
                type: number
                format: float
                example: 50.00
              category_id:
                type: string
                example: "expenses/1-A"
              description:
                type: string
                example: "Almoço do dia 15/05/2025"
              date:
                type: string
                example: "25/05/2025"
      responses:
        201:
          description: "Transação criada com sucesso"
          schema:
            type: array
            items:
              properties:
                id:
                  type: string
                user:
                  type: string
                type:
                  type: string
                amount:
                  type: number
                  format: float
                category_id:
                  type: string
                description:
                  type: string
                date:
                  type: string

  /Transaction/All:
    get:
      summary: "Recuperar todas as transações"
      security:
        - BearerAuth: []
      responses:
        200:
          description: "Lista de transações"
          schema:
            type: array
            items:
              properties:
                id:
                  type: string
                user:
                  type: string
                type:
                  type: string
                amount:
                  type: number
                  format: float
                category_id:
                  type: string
                description:
                  type: string
                date:
                  type: string

  /Transaction/{id}:
    get:
      summary: "Recuperar uma transação por ID"
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: "ID da transação"
      responses:
        200:
          description: "Transação encontrada"
          schema:
            type: object
            properties:
              id:
                type: string
              user:
                type: string
              type:
                type: string
              amount:
                type: number
                format: float
              category_id:
                type: string
              description:
                type: string
              date:
                type: string
        404:
          description: "Transação não encontrada"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Transaction not found"

    put:
      summary: "Atualizar uma transação"
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: "ID da transação"
        - in: body
          name: body
          required: true
          schema:
            properties:
              type:
                type: string
                example: "Débito"
              amount:
                type: number
                format: float
                example: 75.00
              category_id:
                type: string
                example: "expenses/2-A"
              description:
                type: string
                example: "Jantar do dia 15/05/2025"
              date:
                type: string
                format: date
                example: "2025-05-15"
      responses:
        200:
          description: "Transação atualizada com sucesso"
          schema:
            type: object
            properties:
              id:
                type: string
              user:
                type: string
              type:
                type: string
              amount:
                type: number
                format: float
              category_id:
                type: string
              description:
                type: string
              date:
                type: string
        404:
          description: "Transação não encontrada ou acesso negado"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Transaction not found or access denied"
        500:
          description: "Erro interno do servidor"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Internal server error"

    delete:
      summary: "Excluir uma transação"
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: "ID da transação"
      responses:
        200:
          description: "Transação excluída com sucesso"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Transaction deleted successfully"
        404:
          description: "Transação não encontrada ou acesso negado"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Transaction not found or access denied"
        500:
          description: "Erro interno do servidor"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Internal server error"
